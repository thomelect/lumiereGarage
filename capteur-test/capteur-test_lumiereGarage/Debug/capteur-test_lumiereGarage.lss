
capteur-test_lumiereGarage.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000006  00800100  000009e6  00000a7a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000009e6  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000009f  00800106  00800106  00000a80  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000a80  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000adc  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000a0  00000000  00000000  00000b1c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000f03  00000000  00000000  00000bbc  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000bdf  00000000  00000000  00001abf  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000009f6  00000000  00000000  0000269e  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000001bc  00000000  00000000  00003094  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00008e8e  00000000  00000000  00003250  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000047d  00000000  00000000  0000c0de  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000b8  00000000  00000000  0000c55b  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_macro  00003768  00000000  00000000  0000c613  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	55 c0       	rjmp	.+170    	; 0xac <__ctors_end>
   2:	00 00       	nop
   4:	6e c0       	rjmp	.+220    	; 0xe2 <__bad_interrupt>
   6:	00 00       	nop
   8:	6c c0       	rjmp	.+216    	; 0xe2 <__bad_interrupt>
   a:	00 00       	nop
   c:	6a c0       	rjmp	.+212    	; 0xe2 <__bad_interrupt>
   e:	00 00       	nop
  10:	68 c0       	rjmp	.+208    	; 0xe2 <__bad_interrupt>
  12:	00 00       	nop
  14:	66 c0       	rjmp	.+204    	; 0xe2 <__bad_interrupt>
  16:	00 00       	nop
  18:	64 c0       	rjmp	.+200    	; 0xe2 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	62 c0       	rjmp	.+196    	; 0xe2 <__bad_interrupt>
  1e:	00 00       	nop
  20:	60 c0       	rjmp	.+192    	; 0xe2 <__bad_interrupt>
  22:	00 00       	nop
  24:	5e c0       	rjmp	.+188    	; 0xe2 <__bad_interrupt>
  26:	00 00       	nop
  28:	5c c0       	rjmp	.+184    	; 0xe2 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	5a c0       	rjmp	.+180    	; 0xe2 <__bad_interrupt>
  2e:	00 00       	nop
  30:	58 c0       	rjmp	.+176    	; 0xe2 <__bad_interrupt>
  32:	00 00       	nop
  34:	56 c0       	rjmp	.+172    	; 0xe2 <__bad_interrupt>
  36:	00 00       	nop
  38:	54 c0       	rjmp	.+168    	; 0xe2 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	52 c0       	rjmp	.+164    	; 0xe2 <__bad_interrupt>
  3e:	00 00       	nop
  40:	50 c0       	rjmp	.+160    	; 0xe2 <__bad_interrupt>
  42:	00 00       	nop
  44:	4e c0       	rjmp	.+156    	; 0xe2 <__bad_interrupt>
  46:	00 00       	nop
  48:	4c c0       	rjmp	.+152    	; 0xe2 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	4a c0       	rjmp	.+148    	; 0xe2 <__bad_interrupt>
  4e:	00 00       	nop
  50:	48 c0       	rjmp	.+144    	; 0xe2 <__bad_interrupt>
  52:	00 00       	nop
  54:	47 c0       	rjmp	.+142    	; 0xe4 <__vector_21>
  56:	00 00       	nop
  58:	44 c0       	rjmp	.+136    	; 0xe2 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	42 c0       	rjmp	.+132    	; 0xe2 <__bad_interrupt>
  5e:	00 00       	nop
  60:	40 c0       	rjmp	.+128    	; 0xe2 <__bad_interrupt>
  62:	00 00       	nop
  64:	2c c1       	rjmp	.+600    	; 0x2be <__vector_25>
  66:	00 00       	nop
  68:	61 c1       	rjmp	.+706    	; 0x32c <__vector_26>
  6a:	00 00       	nop
  6c:	3a c0       	rjmp	.+116    	; 0xe2 <__bad_interrupt>
  6e:	00 00       	nop
  70:	38 c0       	rjmp	.+112    	; 0xe2 <__bad_interrupt>
  72:	00 00       	nop
  74:	36 c0       	rjmp	.+108    	; 0xe2 <__bad_interrupt>
  76:	00 00       	nop
  78:	34 c0       	rjmp	.+104    	; 0xe2 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	32 c0       	rjmp	.+100    	; 0xe2 <__bad_interrupt>
  7e:	00 00       	nop
  80:	30 c0       	rjmp	.+96     	; 0xe2 <__bad_interrupt>
  82:	00 00       	nop
  84:	2e c0       	rjmp	.+92     	; 0xe2 <__bad_interrupt>
  86:	00 00       	nop
  88:	2c c0       	rjmp	.+88     	; 0xe2 <__bad_interrupt>
  8a:	00 00       	nop
  8c:	2a c0       	rjmp	.+84     	; 0xe2 <__bad_interrupt>
  8e:	00 00       	nop
  90:	28 c0       	rjmp	.+80     	; 0xe2 <__bad_interrupt>
  92:	00 00       	nop
  94:	26 c0       	rjmp	.+76     	; 0xe2 <__bad_interrupt>
  96:	00 00       	nop
  98:	24 c0       	rjmp	.+72     	; 0xe2 <__bad_interrupt>
  9a:	00 00       	nop
  9c:	22 c0       	rjmp	.+68     	; 0xe2 <__bad_interrupt>
  9e:	00 00       	nop
  a0:	20 c0       	rjmp	.+64     	; 0xe2 <__bad_interrupt>
  a2:	00 00       	nop
  a4:	1e c0       	rjmp	.+60     	; 0xe2 <__bad_interrupt>
  a6:	00 00       	nop
  a8:	1c c0       	rjmp	.+56     	; 0xe2 <__bad_interrupt>
	...

000000ac <__ctors_end>:
  ac:	11 24       	eor	r1, r1
  ae:	1f be       	out	0x3f, r1	; 63
  b0:	cf ef       	ldi	r28, 0xFF	; 255
  b2:	da e0       	ldi	r29, 0x0A	; 10
  b4:	de bf       	out	0x3e, r29	; 62
  b6:	cd bf       	out	0x3d, r28	; 61

000000b8 <__do_copy_data>:
  b8:	11 e0       	ldi	r17, 0x01	; 1
  ba:	a0 e0       	ldi	r26, 0x00	; 0
  bc:	b1 e0       	ldi	r27, 0x01	; 1
  be:	e6 ee       	ldi	r30, 0xE6	; 230
  c0:	f9 e0       	ldi	r31, 0x09	; 9
  c2:	02 c0       	rjmp	.+4      	; 0xc8 <__do_copy_data+0x10>
  c4:	05 90       	lpm	r0, Z+
  c6:	0d 92       	st	X+, r0
  c8:	a6 30       	cpi	r26, 0x06	; 6
  ca:	b1 07       	cpc	r27, r17
  cc:	d9 f7       	brne	.-10     	; 0xc4 <__do_copy_data+0xc>

000000ce <__do_clear_bss>:
  ce:	21 e0       	ldi	r18, 0x01	; 1
  d0:	a6 e0       	ldi	r26, 0x06	; 6
  d2:	b1 e0       	ldi	r27, 0x01	; 1
  d4:	01 c0       	rjmp	.+2      	; 0xd8 <.do_clear_bss_start>

000000d6 <.do_clear_bss_loop>:
  d6:	1d 92       	st	X+, r1

000000d8 <.do_clear_bss_start>:
  d8:	a5 3a       	cpi	r26, 0xA5	; 165
  da:	b2 07       	cpc	r27, r18
  dc:	e1 f7       	brne	.-8      	; 0xd6 <.do_clear_bss_loop>
  de:	87 d0       	rcall	.+270    	; 0x1ee <main>
  e0:	80 c4       	rjmp	.+2304   	; 0x9e2 <_exit>

000000e2 <__bad_interrupt>:
  e2:	8e cf       	rjmp	.-228    	; 0x0 <__vectors>

000000e4 <__vector_21>:

/**
*@brief Interruption qui génère les intervales de temps pour fade le DEL et compter le délai avant que la relai ne soit plus actif.
*/
ISR(TIMER0_COMPA_vect)
{
  e4:	1f 92       	push	r1
  e6:	0f 92       	push	r0
  e8:	0f b6       	in	r0, 0x3f	; 63
  ea:	0f 92       	push	r0
  ec:	11 24       	eor	r1, r1
  ee:	2f 93       	push	r18
  f0:	8f 93       	push	r24
  f2:	9f 93       	push	r25
	if (porteToggle) //Si la porte à été ouverte et que toggleCntSec qui à été remis à 0 à la fermeture de la porte n'a pas atteint _TIMER_MIN_CYCLE_CNT... **(Ce if empêche le compteur de tourner inutilement)**
  f4:	80 91 0d 01 	lds	r24, 0x010D	; 0x80010d <porteToggle>
  f8:	88 23       	and	r24, r24
  fa:	49 f0       	breq	.+18     	; 0x10e <__vector_21+0x2a>
		toggleCntSec++;
  fc:	80 91 0b 01 	lds	r24, 0x010B	; 0x80010b <toggleCntSec>
 100:	90 91 0c 01 	lds	r25, 0x010C	; 0x80010c <toggleCntSec+0x1>
 104:	01 96       	adiw	r24, 0x01	; 1
 106:	90 93 0c 01 	sts	0x010C, r25	; 0x80010c <toggleCntSec+0x1>
 10a:	80 93 0b 01 	sts	0x010B, r24	; 0x80010b <toggleCntSec>
	if (toggleCntSec >= _TIMER_SEC_CYCLE_CNT) //15'000 = 1min 62.5ns * 256 * 250 * 15'000 = 60s.
 10e:	80 91 0b 01 	lds	r24, 0x010B	; 0x80010b <toggleCntSec>
 112:	90 91 0c 01 	lds	r25, 0x010C	; 0x80010c <toggleCntSec+0x1>
 116:	8c 34       	cpi	r24, 0x4C	; 76
 118:	9d 41       	sbci	r25, 0x1D	; 29
 11a:	d8 f0       	brcs	.+54     	; 0x152 <__vector_21+0x6e>
	{
		toggleCntSec -= _TIMER_SEC_CYCLE_CNT; //Compteur est remis à zéro à chaques minutes.
 11c:	80 91 0b 01 	lds	r24, 0x010B	; 0x80010b <toggleCntSec>
 120:	90 91 0c 01 	lds	r25, 0x010C	; 0x80010c <toggleCntSec+0x1>
 124:	8c 54       	subi	r24, 0x4C	; 76
 126:	9d 41       	sbci	r25, 0x1D	; 29
 128:	90 93 0c 01 	sts	0x010C, r25	; 0x80010c <toggleCntSec+0x1>
 12c:	80 93 0b 01 	sts	0x010B, r24	; 0x80010b <toggleCntSec>
		toggleCntMin++;
 130:	80 91 09 01 	lds	r24, 0x0109	; 0x800109 <toggleCntMin>
 134:	8f 5f       	subi	r24, 0xFF	; 255
 136:	80 93 09 01 	sts	0x0109, r24	; 0x800109 <toggleCntMin>
		if (toggleCntMin >= _TIMER_MIN_CYCLE_CNT) //Délai est réglé À 15min.
 13a:	80 91 09 01 	lds	r24, 0x0109	; 0x800109 <toggleCntMin>
 13e:	88 23       	and	r24, r24
 140:	41 f0       	breq	.+16     	; 0x152 <__vector_21+0x6e>
		{
			toggleCntMin -= _TIMER_MIN_CYCLE_CNT; //Compteur remis à zéro à chaque 5minutes.
 142:	80 91 09 01 	lds	r24, 0x0109	; 0x800109 <toggleCntMin>
 146:	81 50       	subi	r24, 0x01	; 1
 148:	80 93 09 01 	sts	0x0109, r24	; 0x800109 <toggleCntMin>
			toggleFlag = 1;
 14c:	81 e0       	ldi	r24, 0x01	; 1
 14e:	80 93 0a 01 	sts	0x010A, r24	; 0x80010a <toggleFlag>
		}
	}
	ledCnt++;
 152:	80 91 07 01 	lds	r24, 0x0107	; 0x800107 <ledCnt>
 156:	90 91 08 01 	lds	r25, 0x0108	; 0x800108 <ledCnt+0x1>
 15a:	01 96       	adiw	r24, 0x01	; 1
 15c:	90 93 08 01 	sts	0x0108, r25	; 0x800108 <ledCnt+0x1>
 160:	80 93 07 01 	sts	0x0107, r24	; 0x800107 <ledCnt>
	if (ledCnt >= 5) //Chaques 20ms la DEL augmente ou diminue d'intensité en faisant des bons de 4 pour un maximum de 200 (((0.020 * 200) / 4) = 1sec).
 164:	80 91 07 01 	lds	r24, 0x0107	; 0x800107 <ledCnt>
 168:	90 91 08 01 	lds	r25, 0x0108	; 0x800108 <ledCnt+0x1>
 16c:	05 97       	sbiw	r24, 0x05	; 5
 16e:	60 f0       	brcs	.+24     	; 0x188 <__vector_21+0xa4>
	{
		ledCnt -= 5;
 170:	80 91 07 01 	lds	r24, 0x0107	; 0x800107 <ledCnt>
 174:	90 91 08 01 	lds	r25, 0x0108	; 0x800108 <ledCnt+0x1>
 178:	05 97       	sbiw	r24, 0x05	; 5
 17a:	90 93 08 01 	sts	0x0108, r25	; 0x800108 <ledCnt+0x1>
 17e:	80 93 07 01 	sts	0x0107, r24	; 0x800107 <ledCnt>
		ledFlag = 1;
 182:	81 e0       	ldi	r24, 0x01	; 1
 184:	80 93 06 01 	sts	0x0106, r24	; 0x800106 <__data_end>
	}
}
 188:	9f 91       	pop	r25
 18a:	8f 91       	pop	r24
 18c:	2f 91       	pop	r18
 18e:	0f 90       	pop	r0
 190:	0f be       	out	0x3f, r0	; 63
 192:	0f 90       	pop	r0
 194:	1f 90       	pop	r1
 196:	18 95       	reti

00000198 <timer0Init>:
{
	//TCCR0A : COM0A1 COM0A0 COM0B1 COM0B0 – – WGM01 WGM00
	//TCCR0B : FOC0A FOC0B – – WGM02 CS02 CS01 CS00
	//TIMSK0 : – – – – – OCIE0B OCIE0A TOIE0
	
	TCCR0A |= (1<<WGM01);
 198:	84 b5       	in	r24, 0x24	; 36
 19a:	82 60       	ori	r24, 0x02	; 2
 19c:	84 bd       	out	0x24, r24	; 36
	TCCR0B |= (1<<CS02);
 19e:	85 b5       	in	r24, 0x25	; 37
 1a0:	84 60       	ori	r24, 0x04	; 4
 1a2:	85 bd       	out	0x25, r24	; 37
	TIMSK0 |= (1<<OCIE0A);
 1a4:	ee e6       	ldi	r30, 0x6E	; 110
 1a6:	f0 e0       	ldi	r31, 0x00	; 0
 1a8:	80 81       	ld	r24, Z
 1aa:	82 60       	ori	r24, 0x02	; 2
 1ac:	80 83       	st	Z, r24
	OCR0A = 250-1;
 1ae:	89 ef       	ldi	r24, 0xF9	; 249
 1b0:	87 bd       	out	0x27, r24	; 39
	sei();
 1b2:	78 94       	sei
 1b4:	08 95       	ret

000001b6 <timer4Init>:
	//TCCR4B: PWM4X PSR4 DTPS41 DTPS40 CS43 CS42 CS41 CS40
	//TCCR4C: COM4A1S COM4A0S COM4B1S COMAB0S COM4D1 COM4D0 FOC4D PWM4D
	//TCCR4D: FPIE4 FPEN4 FPNC4 FPES4 FPAC4 FPF4 WGM41 WGM40
	//TCCR4E: TLOCK4 ENHC4 OC4OE5 OC4OE4 OC4OE3 OC4OE2 OC4OE1 OC4OE0
	
	TCCR4A |= (1<<COM4A1) | (1<<PWM4A);
 1b6:	e0 ec       	ldi	r30, 0xC0	; 192
 1b8:	f0 e0       	ldi	r31, 0x00	; 0
 1ba:	80 81       	ld	r24, Z
 1bc:	82 68       	ori	r24, 0x82	; 130
 1be:	80 83       	st	Z, r24
	TCCR4B |= (1<<CS40) | (1<<CS43);
 1c0:	e1 ec       	ldi	r30, 0xC1	; 193
 1c2:	f0 e0       	ldi	r31, 0x00	; 0
 1c4:	80 81       	ld	r24, Z
 1c6:	89 60       	ori	r24, 0x09	; 9
 1c8:	80 83       	st	Z, r24
	OCR4C = 200-1;
 1ca:	87 ec       	ldi	r24, 0xC7	; 199
 1cc:	80 93 d1 00 	sts	0x00D1, r24	; 0x8000d1 <__DATA_REGION_ORIGIN__+0x71>
	OCR4A = 0;
 1d0:	10 92 cf 00 	sts	0x00CF, r1	; 0x8000cf <__DATA_REGION_ORIGIN__+0x6f>
 1d4:	08 95       	ret

000001d6 <miscInit>:

void miscInit(void)
{
	//Initialisation des E/S
	//CAPTEUR_INIT();
	DEL_CAPTEUR_INIT();
 1d6:	84 b1       	in	r24, 0x04	; 4
 1d8:	84 60       	ori	r24, 0x04	; 4
 1da:	84 b9       	out	0x04, r24	; 4
	DEL_PORTE_INIT();
 1dc:	87 b1       	in	r24, 0x07	; 7
 1de:	80 68       	ori	r24, 0x80	; 128
 1e0:	87 b9       	out	0x07, r24	; 7
	
	//Initialisation de variables.
	toggleFlag = 1;
 1e2:	81 e0       	ldi	r24, 0x01	; 1
 1e4:	80 93 0a 01 	sts	0x010A, r24	; 0x80010a <toggleFlag>
	
	//Initialisation des Timers.
	timer0Init();
 1e8:	d7 df       	rcall	.-82     	; 0x198 <timer0Init>
	timer4Init();
 1ea:	e5 cf       	rjmp	.-54     	; 0x1b6 <timer4Init>
 1ec:	08 95       	ret

000001ee <main>:
 1ee:	f3 df       	rcall	.-26     	; 0x1d6 <miscInit>
int main(void)
{
	miscInit();
	while (1)
	{
		if (ledFlag) //Si le flag est vrai...
 1f0:	80 91 06 01 	lds	r24, 0x0106	; 0x800106 <__data_end>
 1f4:	88 23       	and	r24, r24
 1f6:	c1 f0       	breq	.+48     	; 0x228 <main+0x3a>
		{
			ledFlag = 0;
 1f8:	10 92 06 01 	sts	0x0106, r1	; 0x800106 <__data_end>
			if (CAPTEUR() && (OCR4A < 200)) //Si la porte est ouverte et que la DEL n'est pas à son intensité maximale (200)...
 1fc:	18 9b       	sbis	0x03, 0	; 3
 1fe:	09 c0       	rjmp	.+18     	; 0x212 <main+0x24>
 200:	80 91 cf 00 	lds	r24, 0x00CF	; 0x8000cf <__DATA_REGION_ORIGIN__+0x6f>
 204:	88 3c       	cpi	r24, 0xC8	; 200
 206:	28 f4       	brcc	.+10     	; 0x212 <main+0x24>
				OCR4A += PLUS_MOINS; //Augmente l'intensité de la DEL.
 208:	ef ec       	ldi	r30, 0xCF	; 207
 20a:	f0 e0       	ldi	r31, 0x00	; 0
 20c:	80 81       	ld	r24, Z
 20e:	8c 5f       	subi	r24, 0xFC	; 252
 210:	80 83       	st	Z, r24
			if (!CAPTEUR() && (OCR4A > 0)) //Si la porte est fermée et que la DEL n'est pas à son intensité minimale (0)...
 212:	18 99       	sbic	0x03, 0	; 3
 214:	09 c0       	rjmp	.+18     	; 0x228 <main+0x3a>
 216:	80 91 cf 00 	lds	r24, 0x00CF	; 0x8000cf <__DATA_REGION_ORIGIN__+0x6f>
 21a:	88 23       	and	r24, r24
 21c:	29 f0       	breq	.+10     	; 0x228 <main+0x3a>
				OCR4A -= PLUS_MOINS; //Diminue l'intensité de la DEL.
 21e:	ef ec       	ldi	r30, 0xCF	; 207
 220:	f0 e0       	ldi	r31, 0x00	; 0
 222:	80 81       	ld	r24, Z
 224:	84 50       	subi	r24, 0x04	; 4
 226:	80 83       	st	Z, r24
		}
		if (CAPTEUR()) //Si la porte est ouverte...
 228:	18 9b       	sbis	0x03, 0	; 3
 22a:	0e c0       	rjmp	.+28     	; 0x248 <main+0x5a>
		{
			DEL_CAPTEUR_SET(1); //Le relai est activé.
 22c:	85 b1       	in	r24, 0x05	; 5
 22e:	84 60       	ori	r24, 0x04	; 4
 230:	85 b9       	out	0x05, r24	; 5
			porteToggle = 1; //Permet de savoir si la porte à déjà été ouverte depuis le démarage afin de ne pas tomber inutilement en mode veille.
 232:	81 e0       	ldi	r24, 0x01	; 1
 234:	80 93 0d 01 	sts	0x010D, r24	; 0x80010d <porteToggle>
			toggleFlag = 0;
 238:	10 92 0a 01 	sts	0x010A, r1	; 0x80010a <toggleFlag>
			toggleCntSec = 0; //Remet le compteur à 0.
 23c:	10 92 0c 01 	sts	0x010C, r1	; 0x80010c <toggleCntSec+0x1>
 240:	10 92 0b 01 	sts	0x010B, r1	; 0x80010b <toggleCntSec>
			toggleCntMin = 0; //Remet le compteur des minutes à 0 chaques fois que la porte est ouverte.
 244:	10 92 09 01 	sts	0x0109, r1	; 0x800109 <toggleCntMin>
		}
		
		if (!CAPTEUR()) //Si le capteur est inactif...
 248:	18 99       	sbic	0x03, 0	; 3
 24a:	0e c0       	rjmp	.+28     	; 0x268 <main+0x7a>
		{
			if (toggleFlag) //Si le délai est écoulé...
 24c:	80 91 0a 01 	lds	r24, 0x010A	; 0x80010a <toggleFlag>
 250:	88 23       	and	r24, r24
 252:	51 f0       	breq	.+20     	; 0x268 <main+0x7a>
			{
				toggleFlag = 0; //remise du flag à 0.
 254:	10 92 0a 01 	sts	0x010A, r1	; 0x80010a <toggleFlag>
				DEL_CAPTEUR_SET(0); //Le relai est désactivé.
 258:	85 b1       	in	r24, 0x05	; 5
 25a:	8b 7f       	andi	r24, 0xFB	; 251
 25c:	85 b9       	out	0x05, r24	; 5
				if (porteToggle) //Si la porte à déjà été ouverte...
 25e:	80 91 0d 01 	lds	r24, 0x010D	; 0x80010d <porteToggle>
 262:	81 11       	cpse	r24, r1
				{
					porteToggle = 0; //État de la porte == fermée
 264:	10 92 0d 01 	sts	0x010D, r1	; 0x80010d <porteToggle>
					//sleepModeON(); //Mode veille.
				}
			}
		}
		sprintf(msg, "%d\n\r", ((_TIMER_SEC_CYCLE_CNT - toggleCntSec)/250)); //Affiche le temps restant avant que le relai ne soit plus actif.
 268:	80 91 0b 01 	lds	r24, 0x010B	; 0x80010b <toggleCntSec>
 26c:	90 91 0c 01 	lds	r25, 0x010C	; 0x80010c <toggleCntSec+0x1>
 270:	2c e4       	ldi	r18, 0x4C	; 76
 272:	3d e1       	ldi	r19, 0x1D	; 29
 274:	28 1b       	sub	r18, r24
 276:	39 0b       	sbc	r19, r25
 278:	36 95       	lsr	r19
 27a:	27 95       	ror	r18
 27c:	a3 e1       	ldi	r26, 0x13	; 19
 27e:	b3 e8       	ldi	r27, 0x83	; 131
 280:	c9 d0       	rcall	.+402    	; 0x414 <__umulhisi3>
 282:	00 24       	eor	r0, r0
 284:	88 0f       	add	r24, r24
 286:	99 1f       	adc	r25, r25
 288:	00 1c       	adc	r0, r0
 28a:	88 0f       	add	r24, r24
 28c:	99 1f       	adc	r25, r25
 28e:	00 1c       	adc	r0, r0
 290:	89 2f       	mov	r24, r25
 292:	90 2d       	mov	r25, r0
 294:	9f 93       	push	r25
 296:	8f 93       	push	r24
 298:	80 e0       	ldi	r24, 0x00	; 0
 29a:	91 e0       	ldi	r25, 0x01	; 1
 29c:	9f 93       	push	r25
 29e:	8f 93       	push	r24
 2a0:	85 e1       	ldi	r24, 0x15	; 21
 2a2:	91 e0       	ldi	r25, 0x01	; 1
 2a4:	9f 93       	push	r25
 2a6:	8f 93       	push	r24
 2a8:	c4 d0       	rcall	.+392    	; 0x432 <sprintf>
		usartSendString(msg);
 2aa:	85 e1       	ldi	r24, 0x15	; 21
 2ac:	91 e0       	ldi	r25, 0x01	; 1
 2ae:	97 d0       	rcall	.+302    	; 0x3de <usartSendString>
 2b0:	0f 90       	pop	r0
	}
 2b2:	0f 90       	pop	r0
 2b4:	0f 90       	pop	r0
 2b6:	0f 90       	pop	r0
 2b8:	0f 90       	pop	r0
 2ba:	0f 90       	pop	r0
 2bc:	99 cf       	rjmp	.-206    	; 0x1f0 <main+0x2>

000002be <__vector_25>:
 2be:	1f 92       	push	r1
	{
		if(usartSendByte(source[i]))
			return i;
	}
	return size;
}
 2c0:	0f 92       	push	r0
 2c2:	0f b6       	in	r0, 0x3f	; 63
 2c4:	0f 92       	push	r0
 2c6:	11 24       	eor	r1, r1
 2c8:	2f 93       	push	r18
 2ca:	3f 93       	push	r19
 2cc:	8f 93       	push	r24
 2ce:	9f 93       	push	r25
 2d0:	ef 93       	push	r30
 2d2:	ff 93       	push	r31
 2d4:	80 91 12 01 	lds	r24, 0x0112	; 0x800112 <_rxCnt>
 2d8:	8f 5f       	subi	r24, 0xFF	; 255
 2da:	80 93 12 01 	sts	0x0112, r24	; 0x800112 <_rxCnt>
 2de:	80 91 13 01 	lds	r24, 0x0113	; 0x800113 <_rxBufferIn>
 2e2:	90 91 14 01 	lds	r25, 0x0114	; 0x800114 <_rxBufferIn+0x1>
 2e6:	9c 01       	movw	r18, r24
 2e8:	2f 5f       	subi	r18, 0xFF	; 255
 2ea:	3f 4f       	sbci	r19, 0xFF	; 255
 2ec:	30 93 14 01 	sts	0x0114, r19	; 0x800114 <_rxBufferIn+0x1>
 2f0:	20 93 13 01 	sts	0x0113, r18	; 0x800113 <_rxBufferIn>
 2f4:	20 91 ce 00 	lds	r18, 0x00CE	; 0x8000ce <__DATA_REGION_ORIGIN__+0x6e>
 2f8:	fc 01       	movw	r30, r24
 2fa:	eb 5d       	subi	r30, 0xDB	; 219
 2fc:	fe 4f       	sbci	r31, 0xFE	; 254
 2fe:	20 83       	st	Z, r18
 300:	80 91 13 01 	lds	r24, 0x0113	; 0x800113 <_rxBufferIn>
 304:	90 91 14 01 	lds	r25, 0x0114	; 0x800114 <_rxBufferIn+0x1>
 308:	80 34       	cpi	r24, 0x40	; 64
 30a:	91 05       	cpc	r25, r1
 30c:	20 f0       	brcs	.+8      	; 0x316 <__vector_25+0x58>
 30e:	10 92 14 01 	sts	0x0114, r1	; 0x800114 <_rxBufferIn+0x1>
 312:	10 92 13 01 	sts	0x0113, r1	; 0x800113 <_rxBufferIn>
 316:	ff 91       	pop	r31
 318:	ef 91       	pop	r30
 31a:	9f 91       	pop	r25
 31c:	8f 91       	pop	r24
 31e:	3f 91       	pop	r19
 320:	2f 91       	pop	r18
 322:	0f 90       	pop	r0
 324:	0f be       	out	0x3f, r0	; 63
 326:	0f 90       	pop	r0
 328:	1f 90       	pop	r1
 32a:	18 95       	reti

0000032c <__vector_26>:
 32c:	1f 92       	push	r1
 32e:	0f 92       	push	r0
 330:	0f b6       	in	r0, 0x3f	; 63
 332:	0f 92       	push	r0
 334:	11 24       	eor	r1, r1
 336:	8f 93       	push	r24
 338:	ef 93       	push	r30
 33a:	ff 93       	push	r31
 33c:	80 91 0e 01 	lds	r24, 0x010E	; 0x80010e <_txCnt>
 340:	81 11       	cpse	r24, r1
 342:	06 c0       	rjmp	.+12     	; 0x350 <__vector_26+0x24>
 344:	e9 ec       	ldi	r30, 0xC9	; 201
 346:	f0 e0       	ldi	r31, 0x00	; 0
 348:	80 81       	ld	r24, Z
 34a:	8f 7d       	andi	r24, 0xDF	; 223
 34c:	80 83       	st	Z, r24
 34e:	17 c0       	rjmp	.+46     	; 0x37e <__vector_26+0x52>
 350:	80 91 0e 01 	lds	r24, 0x010E	; 0x80010e <_txCnt>
 354:	81 50       	subi	r24, 0x01	; 1
 356:	80 93 0e 01 	sts	0x010E, r24	; 0x80010e <_txCnt>
 35a:	e0 91 11 01 	lds	r30, 0x0111	; 0x800111 <_txBufferOut>
 35e:	81 e0       	ldi	r24, 0x01	; 1
 360:	8e 0f       	add	r24, r30
 362:	80 93 11 01 	sts	0x0111, r24	; 0x800111 <_txBufferOut>
 366:	f0 e0       	ldi	r31, 0x00	; 0
 368:	eb 59       	subi	r30, 0x9B	; 155
 36a:	fe 4f       	sbci	r31, 0xFE	; 254
 36c:	80 81       	ld	r24, Z
 36e:	80 93 ce 00 	sts	0x00CE, r24	; 0x8000ce <__DATA_REGION_ORIGIN__+0x6e>
 372:	80 91 11 01 	lds	r24, 0x0111	; 0x800111 <_txBufferOut>
 376:	80 34       	cpi	r24, 0x40	; 64
 378:	10 f0       	brcs	.+4      	; 0x37e <__vector_26+0x52>
 37a:	10 92 11 01 	sts	0x0111, r1	; 0x800111 <_txBufferOut>
 37e:	ff 91       	pop	r31
 380:	ef 91       	pop	r30
 382:	8f 91       	pop	r24
 384:	0f 90       	pop	r0
 386:	0f be       	out	0x3f, r0	; 63
 388:	0f 90       	pop	r0
 38a:	1f 90       	pop	r1
 38c:	18 95       	reti

0000038e <usartSendByte>:
 38e:	90 91 0e 01 	lds	r25, 0x010E	; 0x80010e <_txCnt>
 392:	90 34       	cpi	r25, 0x40	; 64
 394:	10 f5       	brcc	.+68     	; 0x3da <usartSendByte+0x4c>
 396:	90 91 0e 01 	lds	r25, 0x010E	; 0x80010e <_txCnt>
 39a:	9f 5f       	subi	r25, 0xFF	; 255
 39c:	90 93 0e 01 	sts	0x010E, r25	; 0x80010e <_txCnt>
 3a0:	20 91 0f 01 	lds	r18, 0x010F	; 0x80010f <_txBufferIn>
 3a4:	30 91 10 01 	lds	r19, 0x0110	; 0x800110 <_txBufferIn+0x1>
 3a8:	a9 01       	movw	r20, r18
 3aa:	4f 5f       	subi	r20, 0xFF	; 255
 3ac:	5f 4f       	sbci	r21, 0xFF	; 255
 3ae:	50 93 10 01 	sts	0x0110, r21	; 0x800110 <_txBufferIn+0x1>
 3b2:	40 93 0f 01 	sts	0x010F, r20	; 0x80010f <_txBufferIn>
 3b6:	f9 01       	movw	r30, r18
 3b8:	eb 59       	subi	r30, 0x9B	; 155
 3ba:	fe 4f       	sbci	r31, 0xFE	; 254
 3bc:	80 83       	st	Z, r24
 3be:	40 34       	cpi	r20, 0x40	; 64
 3c0:	51 05       	cpc	r21, r1
 3c2:	20 f0       	brcs	.+8      	; 0x3cc <usartSendByte+0x3e>
 3c4:	10 92 10 01 	sts	0x0110, r1	; 0x800110 <_txBufferIn+0x1>
 3c8:	10 92 0f 01 	sts	0x010F, r1	; 0x80010f <_txBufferIn>
 3cc:	e9 ec       	ldi	r30, 0xC9	; 201
 3ce:	f0 e0       	ldi	r31, 0x00	; 0
 3d0:	80 81       	ld	r24, Z
 3d2:	80 62       	ori	r24, 0x20	; 32
 3d4:	80 83       	st	Z, r24
 3d6:	80 e0       	ldi	r24, 0x00	; 0
 3d8:	08 95       	ret
 3da:	81 e0       	ldi	r24, 0x01	; 1
 3dc:	08 95       	ret

000003de <usartSendString>:

uint8_t usartSendString(const char * str)
{
 3de:	0f 93       	push	r16
 3e0:	1f 93       	push	r17
 3e2:	cf 93       	push	r28
 3e4:	df 93       	push	r29
 3e6:	8c 01       	movw	r16, r24
	uint8_t nbChar = 0;
	for (uint8_t i = 0; str[i]; i++)
 3e8:	c0 e0       	ldi	r28, 0x00	; 0
	return size;
}

uint8_t usartSendString(const char * str)
{
	uint8_t nbChar = 0;
 3ea:	d0 e0       	ldi	r29, 0x00	; 0
	for (uint8_t i = 0; str[i]; i++)
 3ec:	05 c0       	rjmp	.+10     	; 0x3f8 <usartSendString+0x1a>
	{
		if(usartSendByte(str[i]))// Appel de la fonction usartSendByte afin d'envoyer un à un les caractères qui composent la string reçu.
 3ee:	cf df       	rcall	.-98     	; 0x38e <usartSendByte>
 3f0:	81 11       	cpse	r24, r1
 3f2:	0a c0       	rjmp	.+20     	; 0x408 <__LOCK_REGION_LENGTH__+0x8>
			return i;
		nbChar ++;
 3f4:	df 5f       	subi	r29, 0xFF	; 255
}

uint8_t usartSendString(const char * str)
{
	uint8_t nbChar = 0;
	for (uint8_t i = 0; str[i]; i++)
 3f6:	cf 5f       	subi	r28, 0xFF	; 255
 3f8:	f8 01       	movw	r30, r16
 3fa:	ec 0f       	add	r30, r28
 3fc:	f1 1d       	adc	r31, r1
 3fe:	80 81       	ld	r24, Z
 400:	81 11       	cpse	r24, r1
 402:	f5 cf       	rjmp	.-22     	; 0x3ee <usartSendString+0x10>
	{
		if(usartSendByte(str[i]))// Appel de la fonction usartSendByte afin d'envoyer un à un les caractères qui composent la string reçu.
			return i;
		nbChar ++;
	}
	return nbChar;
 404:	8d 2f       	mov	r24, r29
 406:	01 c0       	rjmp	.+2      	; 0x40a <__LOCK_REGION_LENGTH__+0xa>
{
	uint8_t nbChar = 0;
	for (uint8_t i = 0; str[i]; i++)
	{
		if(usartSendByte(str[i]))// Appel de la fonction usartSendByte afin d'envoyer un à un les caractères qui composent la string reçu.
			return i;
 408:	8c 2f       	mov	r24, r28
		nbChar ++;
	}
	return nbChar;
 40a:	df 91       	pop	r29
 40c:	cf 91       	pop	r28
 40e:	1f 91       	pop	r17
 410:	0f 91       	pop	r16
 412:	08 95       	ret

00000414 <__umulhisi3>:
 414:	a2 9f       	mul	r26, r18
 416:	b0 01       	movw	r22, r0
 418:	b3 9f       	mul	r27, r19
 41a:	c0 01       	movw	r24, r0
 41c:	a3 9f       	mul	r26, r19
 41e:	70 0d       	add	r23, r0
 420:	81 1d       	adc	r24, r1
 422:	11 24       	eor	r1, r1
 424:	91 1d       	adc	r25, r1
 426:	b2 9f       	mul	r27, r18
 428:	70 0d       	add	r23, r0
 42a:	81 1d       	adc	r24, r1
 42c:	11 24       	eor	r1, r1
 42e:	91 1d       	adc	r25, r1
 430:	08 95       	ret

00000432 <sprintf>:
 432:	ae e0       	ldi	r26, 0x0E	; 14
 434:	b0 e0       	ldi	r27, 0x00	; 0
 436:	ee e1       	ldi	r30, 0x1E	; 30
 438:	f2 e0       	ldi	r31, 0x02	; 2
 43a:	aa c2       	rjmp	.+1364   	; 0x990 <__prologue_saves__+0x1c>
 43c:	0d 89       	ldd	r16, Y+21	; 0x15
 43e:	1e 89       	ldd	r17, Y+22	; 0x16
 440:	86 e0       	ldi	r24, 0x06	; 6
 442:	8c 83       	std	Y+4, r24	; 0x04
 444:	1a 83       	std	Y+2, r17	; 0x02
 446:	09 83       	std	Y+1, r16	; 0x01
 448:	8f ef       	ldi	r24, 0xFF	; 255
 44a:	9f e7       	ldi	r25, 0x7F	; 127
 44c:	9e 83       	std	Y+6, r25	; 0x06
 44e:	8d 83       	std	Y+5, r24	; 0x05
 450:	ae 01       	movw	r20, r28
 452:	47 5e       	subi	r20, 0xE7	; 231
 454:	5f 4f       	sbci	r21, 0xFF	; 255
 456:	6f 89       	ldd	r22, Y+23	; 0x17
 458:	78 8d       	ldd	r23, Y+24	; 0x18
 45a:	ce 01       	movw	r24, r28
 45c:	01 96       	adiw	r24, 0x01	; 1
 45e:	08 d0       	rcall	.+16     	; 0x470 <vfprintf>
 460:	ef 81       	ldd	r30, Y+7	; 0x07
 462:	f8 85       	ldd	r31, Y+8	; 0x08
 464:	e0 0f       	add	r30, r16
 466:	f1 1f       	adc	r31, r17
 468:	10 82       	st	Z, r1
 46a:	2e 96       	adiw	r28, 0x0e	; 14
 46c:	e4 e0       	ldi	r30, 0x04	; 4
 46e:	ac c2       	rjmp	.+1368   	; 0x9c8 <__epilogue_restores__+0x1c>

00000470 <vfprintf>:
 470:	ab e0       	ldi	r26, 0x0B	; 11
 472:	b0 e0       	ldi	r27, 0x00	; 0
 474:	ed e3       	ldi	r30, 0x3D	; 61
 476:	f2 e0       	ldi	r31, 0x02	; 2
 478:	7d c2       	rjmp	.+1274   	; 0x974 <__prologue_saves__>
 47a:	6c 01       	movw	r12, r24
 47c:	7b 01       	movw	r14, r22
 47e:	8a 01       	movw	r16, r20
 480:	fc 01       	movw	r30, r24
 482:	17 82       	std	Z+7, r1	; 0x07
 484:	16 82       	std	Z+6, r1	; 0x06
 486:	83 81       	ldd	r24, Z+3	; 0x03
 488:	81 ff       	sbrs	r24, 1
 48a:	bf c1       	rjmp	.+894    	; 0x80a <vfprintf+0x39a>
 48c:	ce 01       	movw	r24, r28
 48e:	01 96       	adiw	r24, 0x01	; 1
 490:	3c 01       	movw	r6, r24
 492:	f6 01       	movw	r30, r12
 494:	93 81       	ldd	r25, Z+3	; 0x03
 496:	f7 01       	movw	r30, r14
 498:	93 fd       	sbrc	r25, 3
 49a:	85 91       	lpm	r24, Z+
 49c:	93 ff       	sbrs	r25, 3
 49e:	81 91       	ld	r24, Z+
 4a0:	7f 01       	movw	r14, r30
 4a2:	88 23       	and	r24, r24
 4a4:	09 f4       	brne	.+2      	; 0x4a8 <vfprintf+0x38>
 4a6:	ad c1       	rjmp	.+858    	; 0x802 <vfprintf+0x392>
 4a8:	85 32       	cpi	r24, 0x25	; 37
 4aa:	39 f4       	brne	.+14     	; 0x4ba <vfprintf+0x4a>
 4ac:	93 fd       	sbrc	r25, 3
 4ae:	85 91       	lpm	r24, Z+
 4b0:	93 ff       	sbrs	r25, 3
 4b2:	81 91       	ld	r24, Z+
 4b4:	7f 01       	movw	r14, r30
 4b6:	85 32       	cpi	r24, 0x25	; 37
 4b8:	21 f4       	brne	.+8      	; 0x4c2 <vfprintf+0x52>
 4ba:	b6 01       	movw	r22, r12
 4bc:	90 e0       	ldi	r25, 0x00	; 0
 4be:	c0 d1       	rcall	.+896    	; 0x840 <fputc>
 4c0:	e8 cf       	rjmp	.-48     	; 0x492 <vfprintf+0x22>
 4c2:	91 2c       	mov	r9, r1
 4c4:	21 2c       	mov	r2, r1
 4c6:	31 2c       	mov	r3, r1
 4c8:	ff e1       	ldi	r31, 0x1F	; 31
 4ca:	f3 15       	cp	r31, r3
 4cc:	d8 f0       	brcs	.+54     	; 0x504 <vfprintf+0x94>
 4ce:	8b 32       	cpi	r24, 0x2B	; 43
 4d0:	79 f0       	breq	.+30     	; 0x4f0 <vfprintf+0x80>
 4d2:	38 f4       	brcc	.+14     	; 0x4e2 <vfprintf+0x72>
 4d4:	80 32       	cpi	r24, 0x20	; 32
 4d6:	79 f0       	breq	.+30     	; 0x4f6 <vfprintf+0x86>
 4d8:	83 32       	cpi	r24, 0x23	; 35
 4da:	a1 f4       	brne	.+40     	; 0x504 <vfprintf+0x94>
 4dc:	23 2d       	mov	r18, r3
 4de:	20 61       	ori	r18, 0x10	; 16
 4e0:	1d c0       	rjmp	.+58     	; 0x51c <vfprintf+0xac>
 4e2:	8d 32       	cpi	r24, 0x2D	; 45
 4e4:	61 f0       	breq	.+24     	; 0x4fe <vfprintf+0x8e>
 4e6:	80 33       	cpi	r24, 0x30	; 48
 4e8:	69 f4       	brne	.+26     	; 0x504 <vfprintf+0x94>
 4ea:	23 2d       	mov	r18, r3
 4ec:	21 60       	ori	r18, 0x01	; 1
 4ee:	16 c0       	rjmp	.+44     	; 0x51c <vfprintf+0xac>
 4f0:	83 2d       	mov	r24, r3
 4f2:	82 60       	ori	r24, 0x02	; 2
 4f4:	38 2e       	mov	r3, r24
 4f6:	e3 2d       	mov	r30, r3
 4f8:	e4 60       	ori	r30, 0x04	; 4
 4fa:	3e 2e       	mov	r3, r30
 4fc:	2a c0       	rjmp	.+84     	; 0x552 <vfprintf+0xe2>
 4fe:	f3 2d       	mov	r31, r3
 500:	f8 60       	ori	r31, 0x08	; 8
 502:	1d c0       	rjmp	.+58     	; 0x53e <vfprintf+0xce>
 504:	37 fc       	sbrc	r3, 7
 506:	2d c0       	rjmp	.+90     	; 0x562 <vfprintf+0xf2>
 508:	20 ed       	ldi	r18, 0xD0	; 208
 50a:	28 0f       	add	r18, r24
 50c:	2a 30       	cpi	r18, 0x0A	; 10
 50e:	40 f0       	brcs	.+16     	; 0x520 <vfprintf+0xb0>
 510:	8e 32       	cpi	r24, 0x2E	; 46
 512:	b9 f4       	brne	.+46     	; 0x542 <vfprintf+0xd2>
 514:	36 fc       	sbrc	r3, 6
 516:	75 c1       	rjmp	.+746    	; 0x802 <vfprintf+0x392>
 518:	23 2d       	mov	r18, r3
 51a:	20 64       	ori	r18, 0x40	; 64
 51c:	32 2e       	mov	r3, r18
 51e:	19 c0       	rjmp	.+50     	; 0x552 <vfprintf+0xe2>
 520:	36 fe       	sbrs	r3, 6
 522:	06 c0       	rjmp	.+12     	; 0x530 <vfprintf+0xc0>
 524:	8a e0       	ldi	r24, 0x0A	; 10
 526:	98 9e       	mul	r9, r24
 528:	20 0d       	add	r18, r0
 52a:	11 24       	eor	r1, r1
 52c:	92 2e       	mov	r9, r18
 52e:	11 c0       	rjmp	.+34     	; 0x552 <vfprintf+0xe2>
 530:	ea e0       	ldi	r30, 0x0A	; 10
 532:	2e 9e       	mul	r2, r30
 534:	20 0d       	add	r18, r0
 536:	11 24       	eor	r1, r1
 538:	22 2e       	mov	r2, r18
 53a:	f3 2d       	mov	r31, r3
 53c:	f0 62       	ori	r31, 0x20	; 32
 53e:	3f 2e       	mov	r3, r31
 540:	08 c0       	rjmp	.+16     	; 0x552 <vfprintf+0xe2>
 542:	8c 36       	cpi	r24, 0x6C	; 108
 544:	21 f4       	brne	.+8      	; 0x54e <vfprintf+0xde>
 546:	83 2d       	mov	r24, r3
 548:	80 68       	ori	r24, 0x80	; 128
 54a:	38 2e       	mov	r3, r24
 54c:	02 c0       	rjmp	.+4      	; 0x552 <vfprintf+0xe2>
 54e:	88 36       	cpi	r24, 0x68	; 104
 550:	41 f4       	brne	.+16     	; 0x562 <vfprintf+0xf2>
 552:	f7 01       	movw	r30, r14
 554:	93 fd       	sbrc	r25, 3
 556:	85 91       	lpm	r24, Z+
 558:	93 ff       	sbrs	r25, 3
 55a:	81 91       	ld	r24, Z+
 55c:	7f 01       	movw	r14, r30
 55e:	81 11       	cpse	r24, r1
 560:	b3 cf       	rjmp	.-154    	; 0x4c8 <vfprintf+0x58>
 562:	98 2f       	mov	r25, r24
 564:	9f 7d       	andi	r25, 0xDF	; 223
 566:	95 54       	subi	r25, 0x45	; 69
 568:	93 30       	cpi	r25, 0x03	; 3
 56a:	28 f4       	brcc	.+10     	; 0x576 <vfprintf+0x106>
 56c:	0c 5f       	subi	r16, 0xFC	; 252
 56e:	1f 4f       	sbci	r17, 0xFF	; 255
 570:	9f e3       	ldi	r25, 0x3F	; 63
 572:	99 83       	std	Y+1, r25	; 0x01
 574:	0d c0       	rjmp	.+26     	; 0x590 <vfprintf+0x120>
 576:	83 36       	cpi	r24, 0x63	; 99
 578:	31 f0       	breq	.+12     	; 0x586 <vfprintf+0x116>
 57a:	83 37       	cpi	r24, 0x73	; 115
 57c:	71 f0       	breq	.+28     	; 0x59a <vfprintf+0x12a>
 57e:	83 35       	cpi	r24, 0x53	; 83
 580:	09 f0       	breq	.+2      	; 0x584 <vfprintf+0x114>
 582:	55 c0       	rjmp	.+170    	; 0x62e <vfprintf+0x1be>
 584:	20 c0       	rjmp	.+64     	; 0x5c6 <vfprintf+0x156>
 586:	f8 01       	movw	r30, r16
 588:	80 81       	ld	r24, Z
 58a:	89 83       	std	Y+1, r24	; 0x01
 58c:	0e 5f       	subi	r16, 0xFE	; 254
 58e:	1f 4f       	sbci	r17, 0xFF	; 255
 590:	88 24       	eor	r8, r8
 592:	83 94       	inc	r8
 594:	91 2c       	mov	r9, r1
 596:	53 01       	movw	r10, r6
 598:	12 c0       	rjmp	.+36     	; 0x5be <vfprintf+0x14e>
 59a:	28 01       	movw	r4, r16
 59c:	f2 e0       	ldi	r31, 0x02	; 2
 59e:	4f 0e       	add	r4, r31
 5a0:	51 1c       	adc	r5, r1
 5a2:	f8 01       	movw	r30, r16
 5a4:	a0 80       	ld	r10, Z
 5a6:	b1 80       	ldd	r11, Z+1	; 0x01
 5a8:	36 fe       	sbrs	r3, 6
 5aa:	03 c0       	rjmp	.+6      	; 0x5b2 <vfprintf+0x142>
 5ac:	69 2d       	mov	r22, r9
 5ae:	70 e0       	ldi	r23, 0x00	; 0
 5b0:	02 c0       	rjmp	.+4      	; 0x5b6 <vfprintf+0x146>
 5b2:	6f ef       	ldi	r22, 0xFF	; 255
 5b4:	7f ef       	ldi	r23, 0xFF	; 255
 5b6:	c5 01       	movw	r24, r10
 5b8:	38 d1       	rcall	.+624    	; 0x82a <strnlen>
 5ba:	4c 01       	movw	r8, r24
 5bc:	82 01       	movw	r16, r4
 5be:	f3 2d       	mov	r31, r3
 5c0:	ff 77       	andi	r31, 0x7F	; 127
 5c2:	3f 2e       	mov	r3, r31
 5c4:	15 c0       	rjmp	.+42     	; 0x5f0 <vfprintf+0x180>
 5c6:	28 01       	movw	r4, r16
 5c8:	22 e0       	ldi	r18, 0x02	; 2
 5ca:	42 0e       	add	r4, r18
 5cc:	51 1c       	adc	r5, r1
 5ce:	f8 01       	movw	r30, r16
 5d0:	a0 80       	ld	r10, Z
 5d2:	b1 80       	ldd	r11, Z+1	; 0x01
 5d4:	36 fe       	sbrs	r3, 6
 5d6:	03 c0       	rjmp	.+6      	; 0x5de <vfprintf+0x16e>
 5d8:	69 2d       	mov	r22, r9
 5da:	70 e0       	ldi	r23, 0x00	; 0
 5dc:	02 c0       	rjmp	.+4      	; 0x5e2 <vfprintf+0x172>
 5de:	6f ef       	ldi	r22, 0xFF	; 255
 5e0:	7f ef       	ldi	r23, 0xFF	; 255
 5e2:	c5 01       	movw	r24, r10
 5e4:	17 d1       	rcall	.+558    	; 0x814 <strnlen_P>
 5e6:	4c 01       	movw	r8, r24
 5e8:	f3 2d       	mov	r31, r3
 5ea:	f0 68       	ori	r31, 0x80	; 128
 5ec:	3f 2e       	mov	r3, r31
 5ee:	82 01       	movw	r16, r4
 5f0:	33 fc       	sbrc	r3, 3
 5f2:	19 c0       	rjmp	.+50     	; 0x626 <vfprintf+0x1b6>
 5f4:	82 2d       	mov	r24, r2
 5f6:	90 e0       	ldi	r25, 0x00	; 0
 5f8:	88 16       	cp	r8, r24
 5fa:	99 06       	cpc	r9, r25
 5fc:	a0 f4       	brcc	.+40     	; 0x626 <vfprintf+0x1b6>
 5fe:	b6 01       	movw	r22, r12
 600:	80 e2       	ldi	r24, 0x20	; 32
 602:	90 e0       	ldi	r25, 0x00	; 0
 604:	1d d1       	rcall	.+570    	; 0x840 <fputc>
 606:	2a 94       	dec	r2
 608:	f5 cf       	rjmp	.-22     	; 0x5f4 <vfprintf+0x184>
 60a:	f5 01       	movw	r30, r10
 60c:	37 fc       	sbrc	r3, 7
 60e:	85 91       	lpm	r24, Z+
 610:	37 fe       	sbrs	r3, 7
 612:	81 91       	ld	r24, Z+
 614:	5f 01       	movw	r10, r30
 616:	b6 01       	movw	r22, r12
 618:	90 e0       	ldi	r25, 0x00	; 0
 61a:	12 d1       	rcall	.+548    	; 0x840 <fputc>
 61c:	21 10       	cpse	r2, r1
 61e:	2a 94       	dec	r2
 620:	21 e0       	ldi	r18, 0x01	; 1
 622:	82 1a       	sub	r8, r18
 624:	91 08       	sbc	r9, r1
 626:	81 14       	cp	r8, r1
 628:	91 04       	cpc	r9, r1
 62a:	79 f7       	brne	.-34     	; 0x60a <vfprintf+0x19a>
 62c:	e1 c0       	rjmp	.+450    	; 0x7f0 <vfprintf+0x380>
 62e:	84 36       	cpi	r24, 0x64	; 100
 630:	11 f0       	breq	.+4      	; 0x636 <vfprintf+0x1c6>
 632:	89 36       	cpi	r24, 0x69	; 105
 634:	39 f5       	brne	.+78     	; 0x684 <vfprintf+0x214>
 636:	f8 01       	movw	r30, r16
 638:	37 fe       	sbrs	r3, 7
 63a:	07 c0       	rjmp	.+14     	; 0x64a <vfprintf+0x1da>
 63c:	60 81       	ld	r22, Z
 63e:	71 81       	ldd	r23, Z+1	; 0x01
 640:	82 81       	ldd	r24, Z+2	; 0x02
 642:	93 81       	ldd	r25, Z+3	; 0x03
 644:	0c 5f       	subi	r16, 0xFC	; 252
 646:	1f 4f       	sbci	r17, 0xFF	; 255
 648:	08 c0       	rjmp	.+16     	; 0x65a <vfprintf+0x1ea>
 64a:	60 81       	ld	r22, Z
 64c:	71 81       	ldd	r23, Z+1	; 0x01
 64e:	07 2e       	mov	r0, r23
 650:	00 0c       	add	r0, r0
 652:	88 0b       	sbc	r24, r24
 654:	99 0b       	sbc	r25, r25
 656:	0e 5f       	subi	r16, 0xFE	; 254
 658:	1f 4f       	sbci	r17, 0xFF	; 255
 65a:	f3 2d       	mov	r31, r3
 65c:	ff 76       	andi	r31, 0x6F	; 111
 65e:	3f 2e       	mov	r3, r31
 660:	97 ff       	sbrs	r25, 7
 662:	09 c0       	rjmp	.+18     	; 0x676 <vfprintf+0x206>
 664:	90 95       	com	r25
 666:	80 95       	com	r24
 668:	70 95       	com	r23
 66a:	61 95       	neg	r22
 66c:	7f 4f       	sbci	r23, 0xFF	; 255
 66e:	8f 4f       	sbci	r24, 0xFF	; 255
 670:	9f 4f       	sbci	r25, 0xFF	; 255
 672:	f0 68       	ori	r31, 0x80	; 128
 674:	3f 2e       	mov	r3, r31
 676:	2a e0       	ldi	r18, 0x0A	; 10
 678:	30 e0       	ldi	r19, 0x00	; 0
 67a:	a3 01       	movw	r20, r6
 67c:	1d d1       	rcall	.+570    	; 0x8b8 <__ultoa_invert>
 67e:	88 2e       	mov	r8, r24
 680:	86 18       	sub	r8, r6
 682:	44 c0       	rjmp	.+136    	; 0x70c <vfprintf+0x29c>
 684:	85 37       	cpi	r24, 0x75	; 117
 686:	31 f4       	brne	.+12     	; 0x694 <vfprintf+0x224>
 688:	23 2d       	mov	r18, r3
 68a:	2f 7e       	andi	r18, 0xEF	; 239
 68c:	b2 2e       	mov	r11, r18
 68e:	2a e0       	ldi	r18, 0x0A	; 10
 690:	30 e0       	ldi	r19, 0x00	; 0
 692:	25 c0       	rjmp	.+74     	; 0x6de <vfprintf+0x26e>
 694:	93 2d       	mov	r25, r3
 696:	99 7f       	andi	r25, 0xF9	; 249
 698:	b9 2e       	mov	r11, r25
 69a:	8f 36       	cpi	r24, 0x6F	; 111
 69c:	c1 f0       	breq	.+48     	; 0x6ce <vfprintf+0x25e>
 69e:	18 f4       	brcc	.+6      	; 0x6a6 <vfprintf+0x236>
 6a0:	88 35       	cpi	r24, 0x58	; 88
 6a2:	79 f0       	breq	.+30     	; 0x6c2 <vfprintf+0x252>
 6a4:	ae c0       	rjmp	.+348    	; 0x802 <vfprintf+0x392>
 6a6:	80 37       	cpi	r24, 0x70	; 112
 6a8:	19 f0       	breq	.+6      	; 0x6b0 <vfprintf+0x240>
 6aa:	88 37       	cpi	r24, 0x78	; 120
 6ac:	21 f0       	breq	.+8      	; 0x6b6 <vfprintf+0x246>
 6ae:	a9 c0       	rjmp	.+338    	; 0x802 <vfprintf+0x392>
 6b0:	e9 2f       	mov	r30, r25
 6b2:	e0 61       	ori	r30, 0x10	; 16
 6b4:	be 2e       	mov	r11, r30
 6b6:	b4 fe       	sbrs	r11, 4
 6b8:	0d c0       	rjmp	.+26     	; 0x6d4 <vfprintf+0x264>
 6ba:	fb 2d       	mov	r31, r11
 6bc:	f4 60       	ori	r31, 0x04	; 4
 6be:	bf 2e       	mov	r11, r31
 6c0:	09 c0       	rjmp	.+18     	; 0x6d4 <vfprintf+0x264>
 6c2:	34 fe       	sbrs	r3, 4
 6c4:	0a c0       	rjmp	.+20     	; 0x6da <vfprintf+0x26a>
 6c6:	29 2f       	mov	r18, r25
 6c8:	26 60       	ori	r18, 0x06	; 6
 6ca:	b2 2e       	mov	r11, r18
 6cc:	06 c0       	rjmp	.+12     	; 0x6da <vfprintf+0x26a>
 6ce:	28 e0       	ldi	r18, 0x08	; 8
 6d0:	30 e0       	ldi	r19, 0x00	; 0
 6d2:	05 c0       	rjmp	.+10     	; 0x6de <vfprintf+0x26e>
 6d4:	20 e1       	ldi	r18, 0x10	; 16
 6d6:	30 e0       	ldi	r19, 0x00	; 0
 6d8:	02 c0       	rjmp	.+4      	; 0x6de <vfprintf+0x26e>
 6da:	20 e1       	ldi	r18, 0x10	; 16
 6dc:	32 e0       	ldi	r19, 0x02	; 2
 6de:	f8 01       	movw	r30, r16
 6e0:	b7 fe       	sbrs	r11, 7
 6e2:	07 c0       	rjmp	.+14     	; 0x6f2 <vfprintf+0x282>
 6e4:	60 81       	ld	r22, Z
 6e6:	71 81       	ldd	r23, Z+1	; 0x01
 6e8:	82 81       	ldd	r24, Z+2	; 0x02
 6ea:	93 81       	ldd	r25, Z+3	; 0x03
 6ec:	0c 5f       	subi	r16, 0xFC	; 252
 6ee:	1f 4f       	sbci	r17, 0xFF	; 255
 6f0:	06 c0       	rjmp	.+12     	; 0x6fe <vfprintf+0x28e>
 6f2:	60 81       	ld	r22, Z
 6f4:	71 81       	ldd	r23, Z+1	; 0x01
 6f6:	80 e0       	ldi	r24, 0x00	; 0
 6f8:	90 e0       	ldi	r25, 0x00	; 0
 6fa:	0e 5f       	subi	r16, 0xFE	; 254
 6fc:	1f 4f       	sbci	r17, 0xFF	; 255
 6fe:	a3 01       	movw	r20, r6
 700:	db d0       	rcall	.+438    	; 0x8b8 <__ultoa_invert>
 702:	88 2e       	mov	r8, r24
 704:	86 18       	sub	r8, r6
 706:	fb 2d       	mov	r31, r11
 708:	ff 77       	andi	r31, 0x7F	; 127
 70a:	3f 2e       	mov	r3, r31
 70c:	36 fe       	sbrs	r3, 6
 70e:	0d c0       	rjmp	.+26     	; 0x72a <vfprintf+0x2ba>
 710:	23 2d       	mov	r18, r3
 712:	2e 7f       	andi	r18, 0xFE	; 254
 714:	a2 2e       	mov	r10, r18
 716:	89 14       	cp	r8, r9
 718:	58 f4       	brcc	.+22     	; 0x730 <vfprintf+0x2c0>
 71a:	34 fe       	sbrs	r3, 4
 71c:	0b c0       	rjmp	.+22     	; 0x734 <vfprintf+0x2c4>
 71e:	32 fc       	sbrc	r3, 2
 720:	09 c0       	rjmp	.+18     	; 0x734 <vfprintf+0x2c4>
 722:	83 2d       	mov	r24, r3
 724:	8e 7e       	andi	r24, 0xEE	; 238
 726:	a8 2e       	mov	r10, r24
 728:	05 c0       	rjmp	.+10     	; 0x734 <vfprintf+0x2c4>
 72a:	b8 2c       	mov	r11, r8
 72c:	a3 2c       	mov	r10, r3
 72e:	03 c0       	rjmp	.+6      	; 0x736 <vfprintf+0x2c6>
 730:	b8 2c       	mov	r11, r8
 732:	01 c0       	rjmp	.+2      	; 0x736 <vfprintf+0x2c6>
 734:	b9 2c       	mov	r11, r9
 736:	a4 fe       	sbrs	r10, 4
 738:	0f c0       	rjmp	.+30     	; 0x758 <vfprintf+0x2e8>
 73a:	fe 01       	movw	r30, r28
 73c:	e8 0d       	add	r30, r8
 73e:	f1 1d       	adc	r31, r1
 740:	80 81       	ld	r24, Z
 742:	80 33       	cpi	r24, 0x30	; 48
 744:	21 f4       	brne	.+8      	; 0x74e <vfprintf+0x2de>
 746:	9a 2d       	mov	r25, r10
 748:	99 7e       	andi	r25, 0xE9	; 233
 74a:	a9 2e       	mov	r10, r25
 74c:	09 c0       	rjmp	.+18     	; 0x760 <vfprintf+0x2f0>
 74e:	a2 fe       	sbrs	r10, 2
 750:	06 c0       	rjmp	.+12     	; 0x75e <vfprintf+0x2ee>
 752:	b3 94       	inc	r11
 754:	b3 94       	inc	r11
 756:	04 c0       	rjmp	.+8      	; 0x760 <vfprintf+0x2f0>
 758:	8a 2d       	mov	r24, r10
 75a:	86 78       	andi	r24, 0x86	; 134
 75c:	09 f0       	breq	.+2      	; 0x760 <vfprintf+0x2f0>
 75e:	b3 94       	inc	r11
 760:	a3 fc       	sbrc	r10, 3
 762:	10 c0       	rjmp	.+32     	; 0x784 <vfprintf+0x314>
 764:	a0 fe       	sbrs	r10, 0
 766:	06 c0       	rjmp	.+12     	; 0x774 <vfprintf+0x304>
 768:	b2 14       	cp	r11, r2
 76a:	80 f4       	brcc	.+32     	; 0x78c <vfprintf+0x31c>
 76c:	28 0c       	add	r2, r8
 76e:	92 2c       	mov	r9, r2
 770:	9b 18       	sub	r9, r11
 772:	0d c0       	rjmp	.+26     	; 0x78e <vfprintf+0x31e>
 774:	b2 14       	cp	r11, r2
 776:	58 f4       	brcc	.+22     	; 0x78e <vfprintf+0x31e>
 778:	b6 01       	movw	r22, r12
 77a:	80 e2       	ldi	r24, 0x20	; 32
 77c:	90 e0       	ldi	r25, 0x00	; 0
 77e:	60 d0       	rcall	.+192    	; 0x840 <fputc>
 780:	b3 94       	inc	r11
 782:	f8 cf       	rjmp	.-16     	; 0x774 <vfprintf+0x304>
 784:	b2 14       	cp	r11, r2
 786:	18 f4       	brcc	.+6      	; 0x78e <vfprintf+0x31e>
 788:	2b 18       	sub	r2, r11
 78a:	02 c0       	rjmp	.+4      	; 0x790 <vfprintf+0x320>
 78c:	98 2c       	mov	r9, r8
 78e:	21 2c       	mov	r2, r1
 790:	a4 fe       	sbrs	r10, 4
 792:	0f c0       	rjmp	.+30     	; 0x7b2 <vfprintf+0x342>
 794:	b6 01       	movw	r22, r12
 796:	80 e3       	ldi	r24, 0x30	; 48
 798:	90 e0       	ldi	r25, 0x00	; 0
 79a:	52 d0       	rcall	.+164    	; 0x840 <fputc>
 79c:	a2 fe       	sbrs	r10, 2
 79e:	16 c0       	rjmp	.+44     	; 0x7cc <vfprintf+0x35c>
 7a0:	a1 fc       	sbrc	r10, 1
 7a2:	03 c0       	rjmp	.+6      	; 0x7aa <vfprintf+0x33a>
 7a4:	88 e7       	ldi	r24, 0x78	; 120
 7a6:	90 e0       	ldi	r25, 0x00	; 0
 7a8:	02 c0       	rjmp	.+4      	; 0x7ae <vfprintf+0x33e>
 7aa:	88 e5       	ldi	r24, 0x58	; 88
 7ac:	90 e0       	ldi	r25, 0x00	; 0
 7ae:	b6 01       	movw	r22, r12
 7b0:	0c c0       	rjmp	.+24     	; 0x7ca <vfprintf+0x35a>
 7b2:	8a 2d       	mov	r24, r10
 7b4:	86 78       	andi	r24, 0x86	; 134
 7b6:	51 f0       	breq	.+20     	; 0x7cc <vfprintf+0x35c>
 7b8:	a1 fe       	sbrs	r10, 1
 7ba:	02 c0       	rjmp	.+4      	; 0x7c0 <vfprintf+0x350>
 7bc:	8b e2       	ldi	r24, 0x2B	; 43
 7be:	01 c0       	rjmp	.+2      	; 0x7c2 <vfprintf+0x352>
 7c0:	80 e2       	ldi	r24, 0x20	; 32
 7c2:	a7 fc       	sbrc	r10, 7
 7c4:	8d e2       	ldi	r24, 0x2D	; 45
 7c6:	b6 01       	movw	r22, r12
 7c8:	90 e0       	ldi	r25, 0x00	; 0
 7ca:	3a d0       	rcall	.+116    	; 0x840 <fputc>
 7cc:	89 14       	cp	r8, r9
 7ce:	30 f4       	brcc	.+12     	; 0x7dc <vfprintf+0x36c>
 7d0:	b6 01       	movw	r22, r12
 7d2:	80 e3       	ldi	r24, 0x30	; 48
 7d4:	90 e0       	ldi	r25, 0x00	; 0
 7d6:	34 d0       	rcall	.+104    	; 0x840 <fputc>
 7d8:	9a 94       	dec	r9
 7da:	f8 cf       	rjmp	.-16     	; 0x7cc <vfprintf+0x35c>
 7dc:	8a 94       	dec	r8
 7de:	f3 01       	movw	r30, r6
 7e0:	e8 0d       	add	r30, r8
 7e2:	f1 1d       	adc	r31, r1
 7e4:	80 81       	ld	r24, Z
 7e6:	b6 01       	movw	r22, r12
 7e8:	90 e0       	ldi	r25, 0x00	; 0
 7ea:	2a d0       	rcall	.+84     	; 0x840 <fputc>
 7ec:	81 10       	cpse	r8, r1
 7ee:	f6 cf       	rjmp	.-20     	; 0x7dc <vfprintf+0x36c>
 7f0:	22 20       	and	r2, r2
 7f2:	09 f4       	brne	.+2      	; 0x7f6 <vfprintf+0x386>
 7f4:	4e ce       	rjmp	.-868    	; 0x492 <vfprintf+0x22>
 7f6:	b6 01       	movw	r22, r12
 7f8:	80 e2       	ldi	r24, 0x20	; 32
 7fa:	90 e0       	ldi	r25, 0x00	; 0
 7fc:	21 d0       	rcall	.+66     	; 0x840 <fputc>
 7fe:	2a 94       	dec	r2
 800:	f7 cf       	rjmp	.-18     	; 0x7f0 <vfprintf+0x380>
 802:	f6 01       	movw	r30, r12
 804:	86 81       	ldd	r24, Z+6	; 0x06
 806:	97 81       	ldd	r25, Z+7	; 0x07
 808:	02 c0       	rjmp	.+4      	; 0x80e <vfprintf+0x39e>
 80a:	8f ef       	ldi	r24, 0xFF	; 255
 80c:	9f ef       	ldi	r25, 0xFF	; 255
 80e:	2b 96       	adiw	r28, 0x0b	; 11
 810:	e2 e1       	ldi	r30, 0x12	; 18
 812:	cc c0       	rjmp	.+408    	; 0x9ac <__epilogue_restores__>

00000814 <strnlen_P>:
 814:	fc 01       	movw	r30, r24
 816:	05 90       	lpm	r0, Z+
 818:	61 50       	subi	r22, 0x01	; 1
 81a:	70 40       	sbci	r23, 0x00	; 0
 81c:	01 10       	cpse	r0, r1
 81e:	d8 f7       	brcc	.-10     	; 0x816 <strnlen_P+0x2>
 820:	80 95       	com	r24
 822:	90 95       	com	r25
 824:	8e 0f       	add	r24, r30
 826:	9f 1f       	adc	r25, r31
 828:	08 95       	ret

0000082a <strnlen>:
 82a:	fc 01       	movw	r30, r24
 82c:	61 50       	subi	r22, 0x01	; 1
 82e:	70 40       	sbci	r23, 0x00	; 0
 830:	01 90       	ld	r0, Z+
 832:	01 10       	cpse	r0, r1
 834:	d8 f7       	brcc	.-10     	; 0x82c <strnlen+0x2>
 836:	80 95       	com	r24
 838:	90 95       	com	r25
 83a:	8e 0f       	add	r24, r30
 83c:	9f 1f       	adc	r25, r31
 83e:	08 95       	ret

00000840 <fputc>:
 840:	0f 93       	push	r16
 842:	1f 93       	push	r17
 844:	cf 93       	push	r28
 846:	df 93       	push	r29
 848:	fb 01       	movw	r30, r22
 84a:	23 81       	ldd	r18, Z+3	; 0x03
 84c:	21 fd       	sbrc	r18, 1
 84e:	03 c0       	rjmp	.+6      	; 0x856 <fputc+0x16>
 850:	8f ef       	ldi	r24, 0xFF	; 255
 852:	9f ef       	ldi	r25, 0xFF	; 255
 854:	2c c0       	rjmp	.+88     	; 0x8ae <fputc+0x6e>
 856:	22 ff       	sbrs	r18, 2
 858:	16 c0       	rjmp	.+44     	; 0x886 <fputc+0x46>
 85a:	46 81       	ldd	r20, Z+6	; 0x06
 85c:	57 81       	ldd	r21, Z+7	; 0x07
 85e:	24 81       	ldd	r18, Z+4	; 0x04
 860:	35 81       	ldd	r19, Z+5	; 0x05
 862:	42 17       	cp	r20, r18
 864:	53 07       	cpc	r21, r19
 866:	44 f4       	brge	.+16     	; 0x878 <fputc+0x38>
 868:	a0 81       	ld	r26, Z
 86a:	b1 81       	ldd	r27, Z+1	; 0x01
 86c:	9d 01       	movw	r18, r26
 86e:	2f 5f       	subi	r18, 0xFF	; 255
 870:	3f 4f       	sbci	r19, 0xFF	; 255
 872:	31 83       	std	Z+1, r19	; 0x01
 874:	20 83       	st	Z, r18
 876:	8c 93       	st	X, r24
 878:	26 81       	ldd	r18, Z+6	; 0x06
 87a:	37 81       	ldd	r19, Z+7	; 0x07
 87c:	2f 5f       	subi	r18, 0xFF	; 255
 87e:	3f 4f       	sbci	r19, 0xFF	; 255
 880:	37 83       	std	Z+7, r19	; 0x07
 882:	26 83       	std	Z+6, r18	; 0x06
 884:	14 c0       	rjmp	.+40     	; 0x8ae <fputc+0x6e>
 886:	8b 01       	movw	r16, r22
 888:	ec 01       	movw	r28, r24
 88a:	fb 01       	movw	r30, r22
 88c:	00 84       	ldd	r0, Z+8	; 0x08
 88e:	f1 85       	ldd	r31, Z+9	; 0x09
 890:	e0 2d       	mov	r30, r0
 892:	09 95       	icall
 894:	89 2b       	or	r24, r25
 896:	e1 f6       	brne	.-72     	; 0x850 <fputc+0x10>
 898:	d8 01       	movw	r26, r16
 89a:	16 96       	adiw	r26, 0x06	; 6
 89c:	8d 91       	ld	r24, X+
 89e:	9c 91       	ld	r25, X
 8a0:	17 97       	sbiw	r26, 0x07	; 7
 8a2:	01 96       	adiw	r24, 0x01	; 1
 8a4:	17 96       	adiw	r26, 0x07	; 7
 8a6:	9c 93       	st	X, r25
 8a8:	8e 93       	st	-X, r24
 8aa:	16 97       	sbiw	r26, 0x06	; 6
 8ac:	ce 01       	movw	r24, r28
 8ae:	df 91       	pop	r29
 8b0:	cf 91       	pop	r28
 8b2:	1f 91       	pop	r17
 8b4:	0f 91       	pop	r16
 8b6:	08 95       	ret

000008b8 <__ultoa_invert>:
 8b8:	fa 01       	movw	r30, r20
 8ba:	aa 27       	eor	r26, r26
 8bc:	28 30       	cpi	r18, 0x08	; 8
 8be:	51 f1       	breq	.+84     	; 0x914 <__ultoa_invert+0x5c>
 8c0:	20 31       	cpi	r18, 0x10	; 16
 8c2:	81 f1       	breq	.+96     	; 0x924 <__ultoa_invert+0x6c>
 8c4:	e8 94       	clt
 8c6:	6f 93       	push	r22
 8c8:	6e 7f       	andi	r22, 0xFE	; 254
 8ca:	6e 5f       	subi	r22, 0xFE	; 254
 8cc:	7f 4f       	sbci	r23, 0xFF	; 255
 8ce:	8f 4f       	sbci	r24, 0xFF	; 255
 8d0:	9f 4f       	sbci	r25, 0xFF	; 255
 8d2:	af 4f       	sbci	r26, 0xFF	; 255
 8d4:	b1 e0       	ldi	r27, 0x01	; 1
 8d6:	3e d0       	rcall	.+124    	; 0x954 <__ultoa_invert+0x9c>
 8d8:	b4 e0       	ldi	r27, 0x04	; 4
 8da:	3c d0       	rcall	.+120    	; 0x954 <__ultoa_invert+0x9c>
 8dc:	67 0f       	add	r22, r23
 8de:	78 1f       	adc	r23, r24
 8e0:	89 1f       	adc	r24, r25
 8e2:	9a 1f       	adc	r25, r26
 8e4:	a1 1d       	adc	r26, r1
 8e6:	68 0f       	add	r22, r24
 8e8:	79 1f       	adc	r23, r25
 8ea:	8a 1f       	adc	r24, r26
 8ec:	91 1d       	adc	r25, r1
 8ee:	a1 1d       	adc	r26, r1
 8f0:	6a 0f       	add	r22, r26
 8f2:	71 1d       	adc	r23, r1
 8f4:	81 1d       	adc	r24, r1
 8f6:	91 1d       	adc	r25, r1
 8f8:	a1 1d       	adc	r26, r1
 8fa:	20 d0       	rcall	.+64     	; 0x93c <__ultoa_invert+0x84>
 8fc:	09 f4       	brne	.+2      	; 0x900 <__ultoa_invert+0x48>
 8fe:	68 94       	set
 900:	3f 91       	pop	r19
 902:	2a e0       	ldi	r18, 0x0A	; 10
 904:	26 9f       	mul	r18, r22
 906:	11 24       	eor	r1, r1
 908:	30 19       	sub	r19, r0
 90a:	30 5d       	subi	r19, 0xD0	; 208
 90c:	31 93       	st	Z+, r19
 90e:	de f6       	brtc	.-74     	; 0x8c6 <__ultoa_invert+0xe>
 910:	cf 01       	movw	r24, r30
 912:	08 95       	ret
 914:	46 2f       	mov	r20, r22
 916:	47 70       	andi	r20, 0x07	; 7
 918:	40 5d       	subi	r20, 0xD0	; 208
 91a:	41 93       	st	Z+, r20
 91c:	b3 e0       	ldi	r27, 0x03	; 3
 91e:	0f d0       	rcall	.+30     	; 0x93e <__ultoa_invert+0x86>
 920:	c9 f7       	brne	.-14     	; 0x914 <__ultoa_invert+0x5c>
 922:	f6 cf       	rjmp	.-20     	; 0x910 <__ultoa_invert+0x58>
 924:	46 2f       	mov	r20, r22
 926:	4f 70       	andi	r20, 0x0F	; 15
 928:	40 5d       	subi	r20, 0xD0	; 208
 92a:	4a 33       	cpi	r20, 0x3A	; 58
 92c:	18 f0       	brcs	.+6      	; 0x934 <__ultoa_invert+0x7c>
 92e:	49 5d       	subi	r20, 0xD9	; 217
 930:	31 fd       	sbrc	r19, 1
 932:	40 52       	subi	r20, 0x20	; 32
 934:	41 93       	st	Z+, r20
 936:	02 d0       	rcall	.+4      	; 0x93c <__ultoa_invert+0x84>
 938:	a9 f7       	brne	.-22     	; 0x924 <__ultoa_invert+0x6c>
 93a:	ea cf       	rjmp	.-44     	; 0x910 <__ultoa_invert+0x58>
 93c:	b4 e0       	ldi	r27, 0x04	; 4
 93e:	a6 95       	lsr	r26
 940:	97 95       	ror	r25
 942:	87 95       	ror	r24
 944:	77 95       	ror	r23
 946:	67 95       	ror	r22
 948:	ba 95       	dec	r27
 94a:	c9 f7       	brne	.-14     	; 0x93e <__ultoa_invert+0x86>
 94c:	00 97       	sbiw	r24, 0x00	; 0
 94e:	61 05       	cpc	r22, r1
 950:	71 05       	cpc	r23, r1
 952:	08 95       	ret
 954:	9b 01       	movw	r18, r22
 956:	ac 01       	movw	r20, r24
 958:	0a 2e       	mov	r0, r26
 95a:	06 94       	lsr	r0
 95c:	57 95       	ror	r21
 95e:	47 95       	ror	r20
 960:	37 95       	ror	r19
 962:	27 95       	ror	r18
 964:	ba 95       	dec	r27
 966:	c9 f7       	brne	.-14     	; 0x95a <__ultoa_invert+0xa2>
 968:	62 0f       	add	r22, r18
 96a:	73 1f       	adc	r23, r19
 96c:	84 1f       	adc	r24, r20
 96e:	95 1f       	adc	r25, r21
 970:	a0 1d       	adc	r26, r0
 972:	08 95       	ret

00000974 <__prologue_saves__>:
 974:	2f 92       	push	r2
 976:	3f 92       	push	r3
 978:	4f 92       	push	r4
 97a:	5f 92       	push	r5
 97c:	6f 92       	push	r6
 97e:	7f 92       	push	r7
 980:	8f 92       	push	r8
 982:	9f 92       	push	r9
 984:	af 92       	push	r10
 986:	bf 92       	push	r11
 988:	cf 92       	push	r12
 98a:	df 92       	push	r13
 98c:	ef 92       	push	r14
 98e:	ff 92       	push	r15
 990:	0f 93       	push	r16
 992:	1f 93       	push	r17
 994:	cf 93       	push	r28
 996:	df 93       	push	r29
 998:	cd b7       	in	r28, 0x3d	; 61
 99a:	de b7       	in	r29, 0x3e	; 62
 99c:	ca 1b       	sub	r28, r26
 99e:	db 0b       	sbc	r29, r27
 9a0:	0f b6       	in	r0, 0x3f	; 63
 9a2:	f8 94       	cli
 9a4:	de bf       	out	0x3e, r29	; 62
 9a6:	0f be       	out	0x3f, r0	; 63
 9a8:	cd bf       	out	0x3d, r28	; 61
 9aa:	09 94       	ijmp

000009ac <__epilogue_restores__>:
 9ac:	2a 88       	ldd	r2, Y+18	; 0x12
 9ae:	39 88       	ldd	r3, Y+17	; 0x11
 9b0:	48 88       	ldd	r4, Y+16	; 0x10
 9b2:	5f 84       	ldd	r5, Y+15	; 0x0f
 9b4:	6e 84       	ldd	r6, Y+14	; 0x0e
 9b6:	7d 84       	ldd	r7, Y+13	; 0x0d
 9b8:	8c 84       	ldd	r8, Y+12	; 0x0c
 9ba:	9b 84       	ldd	r9, Y+11	; 0x0b
 9bc:	aa 84       	ldd	r10, Y+10	; 0x0a
 9be:	b9 84       	ldd	r11, Y+9	; 0x09
 9c0:	c8 84       	ldd	r12, Y+8	; 0x08
 9c2:	df 80       	ldd	r13, Y+7	; 0x07
 9c4:	ee 80       	ldd	r14, Y+6	; 0x06
 9c6:	fd 80       	ldd	r15, Y+5	; 0x05
 9c8:	0c 81       	ldd	r16, Y+4	; 0x04
 9ca:	1b 81       	ldd	r17, Y+3	; 0x03
 9cc:	aa 81       	ldd	r26, Y+2	; 0x02
 9ce:	b9 81       	ldd	r27, Y+1	; 0x01
 9d0:	ce 0f       	add	r28, r30
 9d2:	d1 1d       	adc	r29, r1
 9d4:	0f b6       	in	r0, 0x3f	; 63
 9d6:	f8 94       	cli
 9d8:	de bf       	out	0x3e, r29	; 62
 9da:	0f be       	out	0x3f, r0	; 63
 9dc:	cd bf       	out	0x3d, r28	; 61
 9de:	ed 01       	movw	r28, r26
 9e0:	08 95       	ret

000009e2 <_exit>:
 9e2:	f8 94       	cli

000009e4 <__stop_program>:
 9e4:	ff cf       	rjmp	.-2      	; 0x9e4 <__stop_program>
